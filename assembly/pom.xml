<!--
	Copyright (c) 2011, 2017 Eurotech and/or its affiliates and others
   
	All rights reserved. This program and the accompanying materials
	are made available under the terms of the Eclipse Public License v1.0
	which accompanies this distribution, and is available at
	http://www.eclipse.org/legal/epl-v10.html
   
	Contributors:
	   Eurotech - initial API and implementation
	   Red Hat Inc
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>kapua</artifactId>
		<groupId>org.eclipse.kapua</groupId>
		<version>0.2.0-SNAPSHOT</version>
	</parent>

	<artifactId>kapua-assembly</artifactId>
	<packaging>pom</packaging>

	<properties>
		<tomcat.version>8.0.41</tomcat.version>
		<commons.pool.version>2.3</commons.pool.version>

		<docker.account>kapua</docker.account>
		<java.base.image>openjdk:8u111-jre-alpine</java.base.image>
	</properties>

	<dependencies>
		<!-- console and api dependency -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat</artifactId>
			<version>${tomcat.version}</version>
			<type>tar.gz</type>
		</dependency>
		
		<dependency>
			<groupId>org.apache.tomcat.extras</groupId>
			<artifactId>tomcat-extras-juli</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.tomcat.extras</groupId>
			<artifactId>tomcat-extras-juli-adapters</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-rest-api</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-console</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-guice</artifactId>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-broker-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-message-internal</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-account-internal</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-datastore-internal</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-configuration-internal</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-security-shiro</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-liquibase</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-registry-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-registry-internal</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-user-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-user-internal</artifactId>
		</dependency>

		<!-- dependencies added otherwise the unix assembly doesn't know the arctifact 
			to add -->
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-bundle-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-bundle-internal</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-command-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-command-internal</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-packages-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-packages-internal</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-translator-kapua-kura</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-translator-kura-jms</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-translator-kura-mqtt</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-transport-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-transport-jms</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-transport-mqtt</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!-- Google protobuf for message encoding -->
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>apache-activemq</artifactId>
			<version>${activemq.version}</version>
			<classifier>bin</classifier>
			<type>tar.gz</type>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<!--TODO manage version in central place -->
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>4.1.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-jvm</artifactId>
			<version>1.3.4</version>
			<classifier>agent</classifier>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>kapua-broker</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/descriptors/kapua-broker.xml</descriptor>
							</descriptors>
							<tarLongFileMode>posix</tarLongFileMode>
							<finalName>kapua-broker-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
					<execution>
						<id>kapua-console</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/descriptors/kapua-console.xml</descriptor>
							</descriptors>
							<tarLongFileMode>posix</tarLongFileMode>
							<finalName>kapua-console-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
					<execution>
						<id>kapua-api</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/descriptors/kapua-api.xml</descriptor>
							</descriptors>
							<tarLongFileMode>posix</tarLongFileMode>
							<finalName>kapua-api-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
					<execution>
						<id>kapua-cucumber-report</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/descriptors/kapua-cucumber-report.xml</descriptor>
							</descriptors>
							<finalName>kapua-cucumber-report</finalName>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-activemq</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.activemq</groupId>
									<artifactId>apache-activemq</artifactId>
									<classifier>bin</classifier>
									<type>tar.gz</type>
									<outputDirectory>target/dependencies/activemq</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>unpack-tomcat</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.tomcat</groupId>
									<artifactId>tomcat</artifactId>
									<type>tar.gz</type>
									<outputDirectory>target/dependencies/tomcat</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.google.guava</groupId>
									<artifactId>guava</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.inject</groupId>
									<artifactId>guice</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>javax.inject</groupId>
									<artifactId>javax.inject</artifactId>
									<version>1</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>aopalliance</groupId>
									<artifactId>aopalliance</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.persistence</groupId>
									<artifactId>javax.persistence</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.persistence</groupId>
									<artifactId>eclipselink</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>commons-configuration</groupId>
									<artifactId>commons-configuration</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework.security</groupId>
									<artifactId>spring-security-core</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>io.dropwizard.metrics</groupId>
									<artifactId>metrics-core</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.h2database</groupId>
									<artifactId>h2</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.protobuf</groupId>
									<artifactId>protobuf-java</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.shiro</groupId>
									<artifactId>shiro-core</artifactId>
									<version>${shiro.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.paho</groupId>
									<artifactId>org.eclipse.paho.client.mqttv3</artifactId>
									<version>${paho.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.commons</groupId>
									<artifactId>commons-pool2</artifactId>
									<version>2.3</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.bitbucket.b_c</groupId>
									<artifactId>jose4j</artifactId>
									<version>0.5.2</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.elasticsearch</groupId>
									<artifactId>elasticsearch</artifactId>
									<version>${elasticsearch.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.reflections</groupId>
									<artifactId>reflections</artifactId>
									<version>${reflections.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.javassist</groupId>
									<artifactId>javassist</artifactId>
									<version>${javassist.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.code.findbugs</groupId>
									<artifactId>annotations</artifactId>
									<version>${findbugs.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>commons-io</groupId>
									<artifactId>commons-io</artifactId>
									<version>${commons-io.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.commons</groupId>
									<artifactId>commons-lang3</artifactId>
									<version>${commons-lang.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.liquibase</groupId>
									<artifactId>liquibase-core</artifactId>
									<version>${liquibase.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.yaml</groupId>
									<artifactId>snakeyaml</artifactId>
									<version>${snakeyaml.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/broker_dependency</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>${docker.account}/java-base</name>
							<build>
								<from>${java.base.image}</from>
								<runCmds>
									<runCmd><![CDATA[
									apk update && apk add curl tar && \
									adduser -D -g "Eclipse Kapua" kapua && \
									curl -s https://repo1.maven.org/maven2/org/jolokia/jolokia-jvm/1.3.4/jolokia-jvm-1.3.4-agent.jar -o /jolokia-jvm-agent.jar
									]]></runCmd>
								</runCmds>
							</build>
						</image>
						<image>
							<name>${docker.account}/jetty-base</name>
							<build>
								<from>${docker.account}/java-base</from>
								<runCmds>
									<runCmd><![CDATA[
									apk update && apk add bash && \
									cd /home/kapua && \
									curl -s https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/9.4.2.v20170220/jetty-distribution-9.4.2.v20170220.tar.gz -o jetty-distribution.tar.gz && \
									mkdir -p jetty && cd jetty && \
									tar --strip=1 -xzf ../jetty-distribution.tar.gz && \
									rm ../jetty-distribution.tar.gz && \
									chown -R kapua:kapua /home/kapua && \
									mkdir -p /var/lib/jetty/lib/ext /var/lib/jetty/start.d && \
									chown kapua:kapua /var/lib/jetty && \
									cd /var/lib/jetty && \
									java -jar /home/kapua/jetty/start.jar --approve-all-licenses --create-startd --add-to-start=http,jsp,jstl,websocket,deploy,logging-logback
									]]></runCmd>
								</runCmds>
								<assembly>
									<descriptor>/src/main/descriptors/jetty-base.xml</descriptor>
									<basedir>/</basedir>
								</assembly>
								<workdir>/var/lib/jetty</workdir>
								<entryPoint>
									<exec>
										<arg>/home/kapua/run-jetty</arg>
									</exec>
								</entryPoint>
								<ports>
									<port>8080</port>
									<port>8778</port>
								</ports>
							</build>
						</image>
						<image>
							<name>${docker.account}/kapua-sql</name>
							<build>
								<from>${docker.account}/java-base</from>
								<assembly>
									<descriptor>/src/main/descriptors/kapua-sql.xml</descriptor>
									<basedir>/</basedir>
								</assembly>
								<runCmds>
									<runCmd><![CDATA[
									mkdir -p /var/h2/data && \
									chown kapua:kapua /var/h2/data && \
									chmod a+rw /var/h2/data && \
									cd /home/kapua && \
									mkdir tmp && chmod a+rwx tmp && \
									curl -s http://repo2.maven.org/maven2/com/h2database/h2/1.4.193/h2-1.4.193.jar -o h2.jar
									]]></runCmd>
								</runCmds>
								<volumes>
									<volume>/var/h2/data</volume>
								</volumes>
								<ports>
									<port>3306</port>
									<port>8181</port>
									<port>8778</port>
								</ports>
								<user>kapua</user>
								<entryPoint>
									<exec>
										<arg>/home/kapua/run-h2</arg>
									</exec>
								</entryPoint>
							</build>
						</image>
						<image>
							<name>${docker.account}/kapua-broker</name>
							<build>
								<from>${docker.account}/java-base</from>
								<assembly>
									<descriptor>/src/main/descriptors/kapua-broker.xml</descriptor>
								</assembly>
								<entryPoint>
									<exec>
										<arg>/maven/bin/activemq</arg>
										<arg>console</arg>
									</exec>
								</entryPoint>
								<env>
									<ACTIVEMQ_OPTS>-Dcommons.db.connection.host=\${DB_PORT_3306_TCP_ADDR} -Dcommons.db.connection.port=\${DB_PORT_3306_TCP_PORT} -Ddatastore.elasticsearch.node=\${ES_PORT_9300_TCP_ADDR} -Ddatastore.elasticsearch.port=\${ES_PORT_9300_TCP_PORT}</ACTIVEMQ_OPTS>
								</env>
								<ports>
									<port>1883</port>
									<port>8778</port><!-- Jolokia -->
									<port>61614</port>
								</ports>
								<user>kapua</user>
								<runCmds>
									<run><![CDATA[
									chown -R kapua:kapua /maven && \
									chmod -R a+rw /maven && \
									find /maven -type d -exec chmod a+x {} +
									]]></run>
								</runCmds>
								<volumes>
									<volume>/maven/data</volume>
								</volumes>
							</build>
						</image>
						<image>
							<name>${docker.account}/kapua-console</name>
							<build>
								<from>${docker.account}/java-base</from>
								<assembly>
									<descriptor>/src/main/descriptors/kapua-console.xml</descriptor>
								</assembly>
								<entryPoint>
									<exec>
										<arg>/maven/bin/catalina.sh</arg>
										<arg>run</arg>
									</exec>
								</entryPoint>
								<env>
									<CATALINA_OPTS>-Dcommons.db.connection.host=\${DB_PORT_3306_TCP_ADDR} -Dcommons.db.connection.port=\${DB_PORT_3306_TCP_PORT} -Dbroker.host=\${BROKER_PORT_1883_TCP_ADDR} -Ddatastore.elasticsearch.node=\${ES_PORT_9300_TCP_ADDR} -Ddatastore.elasticsearch.port=\${ES_PORT_9300_TCP_PORT}</CATALINA_OPTS>
								</env>
								<ports>
									<port>8080</port>
									<port>8778</port><!-- Jolokia -->
								</ports>
								<user>kapua</user>
								<runCmds>
									<run><![CDATA[
									chown -R kapua:kapua /maven && \
									chmod -R a+rw /maven && \
									find /maven -type d -exec chmod a+x {} +
									]]></run>
								</runCmds>
							</build>
						</image>
						<image>
							<name>${docker.account}/kapua-console-jetty</name>
							<build>
								<from>${docker.account}/jetty-base</from>
								<assembly>
									<descriptor>/src/main/descriptors/kapua-console-jetty.xml</descriptor>
									<basedir>/var/lib/jetty</basedir>
								</assembly>
								<env>
									<JAVA_OPTS>-Dcommons.db.connection.host=\${DB_PORT_3306_TCP_ADDR} -Dcommons.db.connection.port=\${DB_PORT_3306_TCP_PORT} -Dbroker.host=\${BROKER_PORT_1883_TCP_ADDR} -Ddatastore.elasticsearch.node=\${ES_PORT_9300_TCP_ADDR} -Ddatastore.elasticsearch.port=\${ES_PORT_9300_TCP_PORT}</JAVA_OPTS>
								</env>
								<user>kapua</user>
							</build>
						</image>
						<image>
							<name>${docker.account}/kapua-api</name>
							<build>
								<from>${docker.account}/java-base</from>
								<assembly>
									<descriptor>/src/main/descriptors/kapua-api.xml</descriptor>
								</assembly>
								<entryPoint>
									<exec>
										<arg>/maven/bin/catalina.sh</arg>
										<arg>run</arg>
									</exec>
								</entryPoint>
								<env>
									<CATALINA_OPTS>-Dcommons.db.connection.host=\${DB_PORT_3306_TCP_ADDR} -Dcommons.db.connection.port=\${DB_PORT_3306_TCP_PORT} -Dbroker.host=\${BROKER_PORT_1883_TCP_ADDR} -Ddatastore.elasticsearch.node=\${ES_PORT_9300_TCP_ADDR} -Ddatastore.elasticsearch.port=\${ES_PORT_9300_TCP_PORT}</CATALINA_OPTS>
								</env>
								<ports>
									<port>8080</port>
									<port>8778</port><!-- Jolokia -->
								</ports>
								<user>kapua</user>
								<runCmds>
									<run><![CDATA[
									chown -R kapua:kapua /maven && \
									chmod -R a+rw /maven && \
									find /maven -type d -exec chmod a+x {} +
									]]></run>
								</runCmds>
							</build>
						</image>
						<image>
							<name>${docker.account}/kapua-api-jetty</name>
							<build>
								<from>${docker.account}/jetty-base</from>
								<assembly>
									<descriptor>/src/main/descriptors/kapua-api-jetty.xml</descriptor>
									<basedir>/var/lib/jetty</basedir>
								</assembly>
								<env>
									<JAVA_OPTS>-Dcommons.db.connection.host=\${DB_PORT_3306_TCP_ADDR} -Dcommons.db.connection.port=\${DB_PORT_3306_TCP_PORT} -Dbroker.host=\${BROKER_PORT_1883_TCP_ADDR} -Ddatastore.elasticsearch.node=\${ES_PORT_9300_TCP_ADDR} -Ddatastore.elasticsearch.port=\${ES_PORT_9300_TCP_PORT}</JAVA_OPTS>
								</env>
								<user>kapua</user>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<configuration>
						<images>
							<image>
								<name>${docker.account}/java-base</name>
								<build>
									<tags>
										<tag>${project.version}</tag>
										<tag>${timestamp}</tag>
									</tags>
								</build>
							</image>
							<image>
								<name>${docker.account}/kapua-sql</name>
								<build>
									<tags>
										<tag>${project.version}</tag>
										<tag>${timestamp}</tag>
									</tags>
								</build>
							</image>
							<image>
								<name>${docker.account}/kapua-broker</name>
								<build>
									<tags>
										<tag>${project.version}</tag>
										<tag>${timestamp}</tag>
									</tags>
								</build>
							</image>
							<image>
								<name>${docker.account}/kapua-console</name>
								<build>
									<tags>
										<tag>${project.version}</tag>
										<tag>${timestamp}</tag>
									</tags>
								</build>
							</image>
							<image>
								<name>${docker.account}/kapua-console-jetty</name>
								<build>
									<tags>
										<tag>${project.version}</tag>
										<tag>${timestamp}</tag>
									</tags>
								</build>
							</image>
							<image>
								<name>${docker.account}/kapua-api</name>
								<build>
									<tags>
										<tag>${project.version}</tag>
										<tag>${timestamp}</tag>
									</tags>
								</build>
							</image>
							<image>
								<name>${docker.account}/kapua-api-jetty</name>
								<build>
									<tags>
										<tag>${project.version}</tag>
										<tag>${timestamp}</tag>
									</tags>
								</build>
							</image>
						</images>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>deploy</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1</version>
						<configuration>
							<environmentVariables>
								<KAPUA_VERSION>${project.version}</KAPUA_VERSION>
								<TOMCAT_VERSION>${tomcat.version}</TOMCAT_VERSION>
								<ACTIVEMQ_VERSION>${activemq.version}</ACTIVEMQ_VERSION>
							</environmentVariables>
						</configuration>
						<executions>
							<execution>
								<id>vagrant_console_deploy</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>./deployScript/deploy-apps.sh</executable>
									<workingDirectory>${basedir}/../dev-tools/src/main/vagrant/demo</workingDirectory>
								</configuration>
							</execution>
							<execution>
								<id>vagrant_broker_deploy</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>./deployScript/deploy-broker.sh</executable>
									<workingDirectory>${basedir}/../dev-tools/src/main/vagrant/demo</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<defaultGoal>clean install docker:build</defaultGoal>
			</build>
		</profile>

		<profile>
			<id>docker-push</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<defaultGoal>clean install docker:build docker:push</defaultGoal>
			</build>
		</profile>

		<profile>
			<id>release</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>io.fabric8</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<configuration>
								<images>
									<image>
										<name>${docker.account}/java-base</name>
										<build>
											<tags>
												<tag>latest</tag>
												<tag>${project.version}</tag>
												<tag>${timestamp}</tag>
											</tags>
										</build>
									</image>
									<image>
										<name>${docker.account}/kapua-sql</name>
										<build>
											<tags>
												<tag>latest</tag>
												<tag>${project.version}</tag>
												<tag>${timestamp}</tag>
											</tags>
										</build>
									</image>
									<image>
										<name>${docker.account}/kapua-broker</name>
										<build>
											<tags>
												<tag>latest</tag>
												<tag>${project.version}</tag>
												<tag>${timestamp}</tag>
											</tags>
										</build>
									</image>
									<image>
										<name>${docker.account}/kapua-console</name>
										<build>
											<tags>
												<tag>latest</tag>
												<tag>${project.version}</tag>
												<tag>${timestamp}</tag>
											</tags>
										</build>
									</image>
									<image>
										<name>${docker.account}/kapua-console-jetty</name>
										<build>
											<tags>
												<tag>latest</tag>
												<tag>${project.version}</tag>
												<tag>${timestamp}</tag>
											</tags>
										</build>
									</image>
									<image>
										<name>${docker.account}/kapua-api</name>
										<build>
											<tags>
												<tag>latest</tag>
												<tag>${project.version}</tag>
												<tag>${timestamp}</tag>
											</tags>
										</build>
									</image>
									<image>
										<name>${docker.account}/kapua-api-jetty</name>
										<build>
											<tags>
												<tag>latest</tag>
												<tag>${project.version}</tag>
												<tag>${timestamp}</tag>
											</tags>
										</build>
									</image>
								</images>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

</project>
